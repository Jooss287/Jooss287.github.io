[ { "title": "Google Test Link Error(LNK2019) 해결방법", "url": "/posts/GTestLinkIssue/", "categories": "Language, Cpp", "tags": "unit test, gtest", "date": "2021-07-28 17:00:00 +0900", "snippet": "Visual studio 2017부터 Google test가 IDE에서 정식 지원합니다.이전 포스트한 Google test 설치하기는 VS 이외의 IDE에서 사용하면 되겠습니다.Link 2019 Error 발생 배경C++에서의 Gtest는 일반적으로 같은 Solution안의 별개의 Project에서 작업을 진행합니다. 아래와 같이 프로젝트를 구성하고 Test case를 작성하였습니다.Foo solution dir ㄴ Foo ㄴ Foo.h ㄴ Foo.cpp ㄴ FooTest ㄴ F..." }, { "title": "Java와 C++의 class 차이점 정리", "url": "/posts/Java_Cpp_class/", "categories": "Language, Java", "tags": "class", "date": "2021-05-03 23:05:00 +0900", "snippet": "Class에 관해 Java와 C++의 차이점을 간단하게 표로 정리하면 아래와 같습니다. Language C++ Java 상속 관계 public, private, protected extends, implement Virtual method 필요시 명시 Default 조부모 class 접근 연산자를 통해 가능 부모 class를 통해서만 가능 extends..." }, { "title": "코드의 수행시간 체크하기", "url": "/posts/cpp_time_check_funcs/", "categories": "Language, Cpp", "tags": "time_check", "date": "2021-04-16 17:04:00 +0900", "snippet": "C++ 작업을 진행하다 보면 내가 만든 코드의 수행시간이 얼마나 될지 체크해야하는 경우가 생깁니다. 프로그램이 더 빨리 혹은 긴밀하게 연계되어 돌아가는 코드에서는 더욱더 이러한 수행시간을 체크하는것이 중요해집니다.Windows OS에는 다양한 Time Check 방법들이 존재합니다. clock_t GetTickCount() timeGetTime() chrono::system_clock::now() QueryPerformenceCounter하나하나 정리하며 추가로 알게 된 정보에 대해서는 아래에 더 추가하도록 하겠습니다..." }, { "title": "Git commit의 Author 변경하기", "url": "/posts/Edit_commit_author/", "categories": "Git", "tags": "git, commit", "date": "2020-09-07 18:30:00 +0900", "snippet": "우리는 깃허브, 깃랩 등을 이용하여 깃을 사용하곤 합니다.commit, pull request 등 여러 기능을 사용하면서 깃허브에서 잔디밭을 채우는데 희열(?)을 느끼며 개발을 하는 것 같기도 합니다.제 깃허브 페이지에서 주말 잔디밭이 항상 비어있는 것을 보고 뭔가 이상하다고 생각하던 중, 집 컴퓨터에서 사용하는 SourceTree에 메일이 잘못 설정되어 있는것을 발견하였습니다.Git의 Rebase를 사용하여 잘못 정해진 Author를 수정 해 보겠습니다.준비물먼저, 공용 Repository 에는 Rebase작업을 하면 안 됩..." }, { "title": "드라이버 디버깅 세팅하기", "url": "/posts/WinDbg_How_to_use/", "categories": "Language, C", "tags": "windows driver", "date": "2020-09-04 18:30:00 +0900", "snippet": "드라이버를 만들어서 설치를 하게 되면 다양한 문제에 봉착합니다.바로 잘 만들어지면 최고의 결과겠지만 초보자의 단계에선 절대 그럴 수 없는듯 합니다.WDK를 설치하면 같이 설치되는 WinDbg가 이미 드라이버 설치를 끝난 단계에서만 사용 가능한줄 알았으나 연결 해 놓으면 드라이버 설치 시에 생기는 문제도 알려 줍니다.기본적으로 드라이버 개발 시에는 개발을 진행하는 PC에서 테스트를 하는 것이 아닌 원격 PC를 이용하여 아무것도 설치되지 않은 PC를 이용하여 진행합니다.드라이버를 설치 할 PC를 원격 PC로, 개발을 진행하는 PC..." }, { "title": "Driver Inf 작성하기, Driver 빌드하기", "url": "/posts/Make_Inf/", "categories": "Language, C", "tags": "windows driver", "date": "2020-08-24 18:30:00 +0900", "snippet": "드라이버에 관한 정보는 드라이버를 설치 할 때 필요한 Inf 파일에 기록됩니다.inf의 작성방법에 대한 정보는 아래의 링크로 확인하시기 바랍니다. inf 구조 Window driver guide msdn실제로 하드웨어 드라이버와 연결 시 Inf 파일에서 설정 해 주어야 할 부분은 [Stancdard.NT$ARCH$] 입니다.PCI카드의 BARs(Base Address Registers)의Vender ID와 Device ID를이용하여 Window Driver에 연결 할 PCI 주소를 알려줍니다.MSDN에 작성된 작성방법을 참..." }, { "title": "Driver 빌드하기", "url": "/posts/Build_driver/", "categories": "Language, C", "tags": "windows driver", "date": "2020-08-24 18:30:00 +0900", "snippet": "드라이버의 빌드과정은 일반적인 프로그램 제작과는 조금 다른 과정을 거칩니다.Visual studio에서 inf빌드가 가능하지만 안정성을 이유로 EWDK를 사용하여 빌드과정을 거칩니다.Microsoft 설치파일배포 페이지에서 EWDK를 다운받을 수 있습니다.EWDK downalod pageWDK와 버전을 맞춰 EWDK를 다운로드 한 뒤 마운트시키면 몇가지 파일들이 보입니다.그 중 LunchBuildEnv.cmd를 켜서 Command Mode에서 build 작업을 수행합니다.프로젝트가 있는 폴더로 cd 명령어를 이용하여 이동 후 ..." }, { "title": "PCISample 함수 분석", "url": "/posts/PCISample_code_analysis/", "categories": "Language, C", "tags": "windows driver", "date": "2020-08-21 18:30:00 +0900", "snippet": "DriverEntry DriverUnload: Unload 루틴 포인터, Unload 시 해다 함수 실행 DriverExtension: Dirver Extension pointer. AddDevice을 통해서 드라이버 확장 루틴 진행 MajorFunction: Driver의 Dispatch루틴에 대한 진입경로, 드라이버가 처리하는 IRP_MJ_XXX요청에 대한 pointer를 설정해야 합니다.PCIe_AddDevice IoCreateDevice: pDriver 생성 RtlZeroMemory: memory 0으로 초기화..." }, { "title": "WDM 용어 정리", "url": "/posts/wdm_Terminology/", "categories": "Language, C", "tags": "windows driver", "date": "2020-08-04 18:30:00 +0900", "snippet": "파일 입출력과 IRP응용 프로그램 단에서 드라이버와 통신을 하게 되면 드라이퍼를 ‘파일’로써 인식하고 Win32API 를 사용하여 통신을 하게 됩니다.Win32API의 CreateFile을 호출하게 되면 Dirver단에서 IRP_MJ_CREATE 명령어가 생성되어 드라이버에게 전달합니다.또한 드라이버에서는 MRP_MJ_CREATE명령어를 처리하는 콜백 함수가 DEVICE_OBJECT에 등록되어 있어야 합니다. 응용 프로그램에서 I/O Manager로 [요청] 요청한 디바이스 스택 발견 [Symbolic Name 사용] 디..." }, { "title": "KMDF 정리", "url": "/posts/kmdf/", "categories": "Language, C", "tags": "windows driver", "date": "2020-07-20 18:30:00 +0900", "snippet": "Kernel Mode Driver Development지난번 TIL에서 Windows Driver Kit 개발 환경 세팅을 진행했습니다.Windows architecture를 공부함과 동시에 어떤식으로 Driver를 개발해야 하는지에 대해서도 지속적으로 공부중입니다.공부하고 있는 것들을 간단하게나마 정리하고자 합니다.WDM과 WDFWindows에서 지원하는 Driver Development Kit는 WDM(Windows Driver Model)으로 과거 DDK(Driver Development Kit)이라는 이름이 통합되어 관..." }, { "title": "Windows Dirver 개발환경 세팅하기", "url": "/posts/Windows_Driver_Kit/", "categories": "Language, C", "tags": "windows driver", "date": "2020-07-15 18:30:00 +0900", "snippet": "windows driver는 하드웨어적으로 장비와 연결짓기 위해 kernel 단에서 활동하는 프로그램을 말합니다.Microsoft에서는 driver를 만들기 위한 방법으로 WDK(windows Driver Kit)을 제공합니다.Windows 10 1903 build를 기준으로 driver 개발 환경을 만들어 보도록 하겠습니다.InstallDirver를 만들기 위해서는 SDK(Software Developement Kit)와 WDK 두개가 필요합니다.우선 visual studio 2019를 설치하면서 c++ 워크로드에서 옵션에 ..." }, { "title": "Google test 설치하기", "url": "/posts/Cpp_GTest/", "categories": "Language, Cpp", "tags": "unit test", "date": "2020-07-09 18:30:00 +0900", "snippet": "xUnit test 는 코드를 최소한으로 쪼개어 unit마다 테스트를 진행하며 에러를 사전에 찾겠다는 방법입니다.앞에 x가 들어가는 것은 언어를 뜻하며 Java는 j .Net는 N 등을 사용합니다.최근 프로그램을 개발하는 방법 중에 TDD(Test-driven Development) 개발 방법이 많이 떠오르고 있습니다.용어 그대로 테스트 주도 개발로 개발을 진행하면서 지속적인 테스트와 테스트 결과를 통해 에러를 최소화시키겠다는 개념입니다.프로그래밍을 적용시킬 수 있는 분야는 엄청나게 넓어서 분야마다 적용 시킬 수 있는 범위가 ..." }, { "title": "Cpp Boost library 설치하기", "url": "/posts/Cpp_boost/", "categories": "Language, Cpp", "tags": "boost", "date": "2020-06-26 18:30:00 +0900", "snippet": "Boost 라이브러리는 c++개발을 하면서 가장 많이 쓰는 라이브러리이면서 많은 사용자가 성능을 증명한 라이브러리기도 합니다.더불어 Boost개발진들 중 상당수가 c++표준위원회에 속해 있어 c++의 새 표준이 발표 될 때 마다 Boost의 영향을 많이 받아 출시됩니다.더불어 낮은 C++ 버전을 지원하는 IDE일 경우 Boost를 사용하여 미리 연습하고 적용 할 수 있습니다.Boost Library 설치 for windowshttps://www.boost.org/ 에서 라이브러리를 다운 받을 수 있습니다.20.06.26 현재 ..." }, { "title": "컴퓨터 두대로 방송세팅 혹은 녹화 세팅하기", "url": "/posts/Two_computer_recording_system/", "categories": "ETC", "tags": "etc recording", "date": "2020-06-21 18:30:00 +0900", "snippet": "컴퓨터 두대로 녹화 혹은 방송을 하게 되면 항상 세팅에서 시간을 잡아먹는 경우가 많다.시간을 투자하면 복구할수는 있지만 그 시간을 최소한으로 하기 위해 md파일로 작성해 둔다.이 글은 세팅을 하는것에만 중점을 두고 소프트웨어의 사용법에 대해서는 적지 않는다.보유상황 게임용 PC X6 Supercast capture board VoiceMeeter Banana(SW) Virtual Audio Cable (VB-CABLE) (SW) 녹화용 PC OBS Studio(S..." }, { "title": "Django DB 세팅하기", "url": "/posts/django_db/", "categories": "Language, Python", "tags": "django", "date": "2020-06-16 18:30:00 +0900", "snippet": "django는 일반적인 sql query문 대신 django에서 지원하는 queryset을 사용하여 데이터베이스에서 자료를 가져 올 수 있습니다.오늘의 TIL은 진행중인 프로젝트에 기능추가를 할 겸 queryset api를 간단하게 정리하고자 합니다.자세한 내용은 Django queryset 공식문서을 참조해주세요QuerySetqueryset을 사용하기 위해서는 &amp;lt;modelname&amp;gt;.objects.func()의 형식으로 데이터를 불러와야 합니다.모든 데이터 가져오기query_response = TABL..." }, { "title": "리눅스 환경설정하기", "url": "/posts/Linux_env_setting/", "categories": "OS, Linux", "tags": "env setting", "date": "2020-06-15 18:30:00 +0900", "snippet": "TILC(Today I Learned Challenge)가 시작되었습니다.다른 사람들의 TIL들을 보고 리뷰하면서 자기 자신에게 좋은 자극제가 되었으면 하는 바람에서 시작했습니다.그 첫 주제로 항상 Linux 환경에서 이것저것 해보고싶었는데 마침 리눅스 환경을 날려먹는 좋은 기회가 생겨 Linux에 Docker 컨테이너를 사용하여 진행중인 프로젝트 환경을 생성하고자 합니다.진행중인 프로젝트 환경(설정해야 할 환경) Linux mint + Django + WSGI + Apache2.4 Linux mint + CUDA + cu..." }, { "title": "Tomcat 설치하기", "url": "/posts/Install_Tomcat/", "categories": "Language, Python", "tags": "tomcat, env setting", "date": "2020-04-09 18:30:00 +0900", "snippet": "Apache Tomcat아파치 톰캣은 아파치+톰캣을 의미한다.둘 다 웹 서버로 사용 할 수 있지만 사용목적이 약간씩 다르다. Apache아파치는 정적 웹 서버로 클라이언트에서 요청(POST, GET, PUT, DELETE)이 온 것만 응답한다. HTML, CSS, 이미지 등의 정적인 처리만 담당한다. Tomcat 톰캣은 다이나믹 웹 서버로 WAS(Web Application server) 동적인 웹 컨테이너를 제작하기 위해서 사용한다. JSP, ASP, PHP 등의 동적 데이터를 톰캣에서 처리한다.그렇다면 정적인 데이터까..." }, { "title": "Django와 Tomcat 연동하기", "url": "/posts/Connect_apache_Django/", "categories": "Language, Python", "tags": "tomcat, env setting", "date": "2020-04-09 18:30:00 +0900", "snippet": "아파치 톰캣을 정상적으로 설치 한 뒤 Django와 연결하기 위해서 WSGI(Web Server Gateway Interface)를 사용하여야 한다.WSGI는 파이썬에서 어플리케이션이 웹 서버와 통신하기 위한 인터페이스로 웹 서버와 웹 어플리케이션 중앙에서 미들웨어로써 동작한다.요청 → 웹서버 → WSGI Server → DjangoDjango는 mod_wsgi를 사용하여 WSGI Server를 구현한다.windows+Anaconda+mod_wsgimod_wsgi의 윈도우용 버전은 컴파일버전을 더이상 지원하지 않는다.비공식으로..." }, { "title": "Django를 처음 설치하기", "url": "/posts/Install_Django/", "categories": "Language, Python", "tags": "django", "date": "2020-04-07 18:30:00 +0900", "snippet": "Django 설치Django의 환경을 Anaconda 가상환경에 세팅해서 세팅을 확실하게 구별하고자 했다.Anaconda Prompt에서 가상환경을 만들고 Django를 설치하였다.Django의 공식 문서의 튜토리얼을 보면서 Django의 사용법을 익히고자 한다.Conda Create -n web_server_env python=3.7Activate web_server_envpython -m pip install Django설치가 완료된 후 Django가 정상적으로 설치되었는지 확인해보자.python -m django --ve..." }, { "title": "Django를 시작하기 전에 알아야 할 배경지식", "url": "/posts/Before_starting_Django/", "categories": "Language, Python", "tags": "django", "date": "2020-04-06 18:30:00 +0900", "snippet": "MVC초창기 웹 페이지 개발은 모든것이 한 페이지 혹은 모델로 개발되었다.그러나 기술 스택들이 점차 고도화되고 웹퍼블리싱 등의 분야가 생기면서 이것을 분할 할 필요성이 제기되었고 1979년도에 Trygve Reenskaug에 의해 제안되었다.세 가지 롤에 의해서 프로그램을 구현하자는 것인데, Model, View, Control로 분할하여 프로그램을 구현한다. Model은 유저의 중요한 데이터들을 보호하고 숨기는 일을 한다. View는 유저들에게 보여주는 화면을 구성한다. Control은 View와 Model 사이에서 유..." }, { "title": "Git을 이용하는 소규모 팀이 사용하는 워크플로우", "url": "/posts/Small_team_workflow/", "categories": "Git", "tags": "git, workflow", "date": "2020-03-26 18:30:00 +0900", "snippet": "깃을 이용한 해서 처음 프로젝트를 시작하고 많은 수행착오를 겪었다.단순한 Branches 사용법이나 Commit, push 등 하나 하나 배워가면서 시작한 프로젝트 리포지토리는 매번 workflow가 바뀌는 것을 볼 수 있었다.Pull request의 사용법에 대해 고민하던 중 아 사람들은 협업을 이런식으로 하는구나! 라고 이해하고 난 뒤에 프로젝트의 workflow를 바꾸어 진행하였다.앞으로 또 바뀔 수 있겠지만 현재까지는Branch, Commit, Push 만을 이용하던 시기처음 Branch를 보고 파일을 일일이 복사해가면..." }, { "title": "깔끔한 commit 기록 남기기", "url": "/posts/Make_clean_commit/", "categories": "Git", "tags": "git, commit", "date": "2020-03-26 18:30:00 +0900", "snippet": "기록을 남기는것에 대해서 최대한 간결하고 깔끔하게 보이도록 하려고 노력한다.Github를 이용하기 전에도 어떻게 하면 주석이나 코드를 깔끔하게 짤 수 있을까에 대한 고민이 항상 이어져왔던것같다.단순히 branch를 merge하면서 프로젝트를 진행하니 branch에서 임시로 남긴 commit도 함께 남는 경우와 오타수정처럼 간단한 작업에서도 에서도 commit이 발생하여 commit history가 지저분해지는 상황이 자주 발생하였다.평상시에 commit를 남발하더라도 프로젝트에 남는 commit 만큼은 최대한 알아보기 쉽게 남..." }, { "title": "작업하던 Repository를 이전하기", "url": "/posts/repo_address_transfer/", "categories": "Git", "tags": "git, repository", "date": "2020-03-25 18:30:00 +0900", "snippet": "Repo address transfer소스 관리 툴을 처음 사용하면서 친구와 진행한 토이 프로젝트를 초창기 아무것도 모르고 개인 리포지토리에 생성 후 진행했다.프로젝트가 어느정도 진행 된 후 개인 repo보다는 그룹으로 진행하는 것이 맞다는 생각이 들었고 주소 이전을 할 방법을 찾아보았다.git commend에 관한 설명을 제외하고 repo 주소 이전에 관한 내용만 기록하겠다.Given situation 4 branches, 49commits, 7issue 정도의 얼마 진행되지 않은 프로젝트 issue번호가 꼬일 것 같았지..." }, { "title": "GitGui Sourcetree 간단 사용법", "url": "/posts/Gitgui_sourcetree/", "categories": "Git", "tags": "git, utility", "date": "2020-01-01 18:30:00 +0900", "snippet": "설치방법은 간단하니 패스 설치방법 Link1 설치방법 Link2SourceTree는 명령어 형태의 Git CLI(Command Line Interface)를 GUI(Graphic User Interface)로 사용자가 편리하게 사용 할 수 있는 무료 소프트웨어이다.Source Tree 화면설명 및 사용법처음 실행하게 되면 보게 되는 화면은 간단하다.Git Repo를 연동시켜야 제대로 된 화면을 볼 수 있으므로 우선 Clone으로 연동하는 작업부터 한다.위 화면의 Clone 을 눌러 나오는 화면에서 Github Reposit..." } ]
